#!/usr/bin/python3

import argparse
import boto3
import json
import logging

from botocore.exceptions import ClientError

logger = logging.getLogger(__name__)
#logging.basicConfig(level=logging.INFO)

def determine_prompt(en, ja):
    if ja is None:
        base_prompt = f"Please create an example sentence for `{en}` in English. Do not output any preamble."
    else:
        base_prompt = f"Please create an example sentence for `{en}` in English. I expect its meaning in Japanese as `{ja}`. Do not output any preamble."
    return base_prompt

def generate_message(bedrock_runtime, model_id, system_prompt, messages, max_tokens):
    body=json.dumps(
        {
            "anthropic_version": "bedrock-2023-05-31",
            "max_tokens": max_tokens,
            "system": system_prompt,
            "messages": messages
        }  
    )  

    response = bedrock_runtime.invoke_model(body=body, modelId=model_id)
    response_body = json.loads(response.get('body').read())
   
    return response_body


def main():
    parser = argparse.ArgumentParser(
                    prog='create-sample',
                    description='This program create a example sentence using specified word or phrase with Japanese meaning.')
    parser.add_argument('en')
    parser.add_argument('-j', '--ja', required=False)
    args = parser.parse_args()
    try:
        bedrock_runtime = boto3.client(region_name='us-west-2', service_name='bedrock-runtime')

        model_id = 'anthropic.claude-3-sonnet-20240229-v1:0'
        system_prompt = "Please respond only with English."
        max_tokens = 1000

        base_prompt = determine_prompt(args.en, args.ja)
        user_message =  {"role": "user", "content": base_prompt}
        messages = [user_message]

        response = generate_message(bedrock_runtime, model_id, system_prompt, messages, max_tokens)
        print(response["content"][0]['text'])

    except ClientError as err:
        message=err.response["Error"]["Message"]
        logger.error("A client error occurred: %s", message)
        print("A client error occured: " + format(message))

if __name__ == "__main__":
    main()

